var CaasU;(()=>{"use strict";var e={d:(s,t)=>{for(var r in t)e.o(t,r)&&!e.o(s,r)&&Object.defineProperty(s,r,{enumerable:!0,get:t[r]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},s={};e.r(s),e.d(s,{CaasUserManagementClient:()=>t});class t{constructor(e){this.currentUser=null,this.currentProject=null,this.currentHub=null,this.demoMode=!1,this.useDirectFetch=!1,this.useStreaming=!0,this.serveraddress=e,this.sessionid=localStorage.getItem("CSUM-API-SESSIONID"),this.streamingServerURL="",this.useSSR=!1}setUseSSR(e){this.useSSR=e}getUseSSR(){return this.useSSR}getStreamingServerURL(){return this.streamingServerURL}setUseStreaming(e){this.useStreaming=e}gettUseStreaming(){return this.usestreaming}getSessionID(){return this.sessionid}getCurrentUser(){return this.currentUser}getCurrentHub(){return this.currentHub}getCurrentProject(){return this.currentProject}getUseDirectFetch(){return this.useDirectFetch}getUseStreaming(){return this.useStreaming}getDemoMode(){return this.demoMode}getUploadURL(){return this.serveraddress+"/caas_um_api/upload"}getUploadArrayURL(){return this.serveraddress+"/caas_um_api/uploadArray"}setServerAddress(e){this.serveraddress=e}async getConfiguration(){const e=new AbortController;let s,t=setTimeout((()=>e.abort()),2e3);try{s=await fetch(this.serveraddress+"/caas_um_api/configuration",{signal:e.signal,mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}})}catch(e){return!1}clearTimeout(t);let r=await s.json();return this.useDirectFetch=r.useDirectFetch,this.useStreaming=r.useStreaming,this.demoMode=r.demoMode,this.useSSR=r.ssrEnabled,!0}async checkLogin(){let e=await fetch(this.serveraddress+"/caas_um_api/checklogin",{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}}),s=await e.json();return!!s.succeeded&&(this.currentUser=s.user,s.hub?s.project?(this.currentHub=s.hub,this.currentProject=s.project):(this.currentHub=s.hub,this.currentProject=null):(this.currentProject=null,this.currentHub=null),!0)}async logout(){await fetch(this.serveraddress+"/caas_um_api/logout/",{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async register(e){let s=JSON.stringify({firstName:e.firstName,lastName:e.lastName,email:e.email,password:e.password}),t=await fetch(this.serveraddress+"/caas_um_api/register/",{body:s,mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"POST",headers:{"Content-type":"application/json; charset=UTF-8"}});return t=await t.json(),t.ERROR?t.ERROR:"SUCCESS"}async login(e,s,t=!1){let r;r=e&&s?this.serveraddress+"/caas_um_api/login/"+e+"/"+s:this.serveraddress+"/caas_um_api/login";let a=await fetch(r,{mode:"cors",headers:{"CSUM-API-GENERATEPROJECT":t,"CSUM-API-SESSIONID":this.sessionid},method:"PUT"});return a=await a.json(),a.ERROR||(this.currentUser=a.user,this.sessionid=a.sessionid,localStorage.setItem("CSUM-API-SESSIONID",this.sessionid)),a}async leaveHub(){await fetch(this.serveraddress+"/caas_um_api/hub/none",{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"}),this.currentProject=null,this.currentHub=null}async getHubs(){let e=await fetch(this.serveraddress+"/caas_um_api/hubs",{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}});return await e.json()}async renameHub(e,s){await fetch(this.serveraddress+"/caas_um_api/renameHub/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async createHub(e){let s=await fetch(this.serveraddress+"/caas_um_api/newhub/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"});return await s.json()}async loadHub(e){let s=await fetch(this.serveraddress+"/caas_um_api/hub/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"}),t=await s.json();this.currentHub=t}async getHubUsers(e){let s=await fetch(this.serveraddress+"/caas_um_api/hubusers/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}});return await s.json()}async addHubUser(e,s,t){await fetch(this.serveraddress+"/caas_um_api/addHubUser/"+e+"/"+s+"/"+t,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async updateHubUser(e,s,t){await fetch(this.serveraddress+"/caas_um_api/updateHubUser/"+e+"/"+s+"/"+t,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async deleteHubUser(e,s){await fetch(this.serveraddress+"/caas_um_api/deleteHubUser/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async deleteHub(e){await fetch(this.serveraddress+"/caas_um_api/deleteHub/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async acceptHub(e,s){await fetch(this.serveraddress+"/caas_um_api/acceptHub/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"}),this.refreshHubTable()}async leaveProject(){await fetch(this.serveraddress+"/caas_um_api/project/none",{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"}),this.currentProject=null}async renameProject(e,s){await fetch(this.serveraddress+"/caas_um_api/renameproject/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async createProject(e,s){let t=await fetch(this.serveraddress+"/caas_um_api/newproject/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"});return await t.json()}async deleteProject(e){await fetch(this.serveraddress+"/caas_um_api/deleteproject/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async loadProject(e){let s=await fetch(this.serveraddress+"/caas_um_api/project/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"}),t=await s.json();this.currentProject=t}async getProjects(e){let s=await fetch(this.serveraddress+"/caas_um_api/projects/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}});return await s.json()}async getProjectUsers(e){let s=await fetch(this.serveraddress+"/caas_um_api/projectusers/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}});return await s.json()}async addProjectUser(e,s,t){await fetch(this.serveraddress+"/caas_um_api/addProjectUser/"+e+"/"+s+"/"+t,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async updateProjectUser(e,s,t){await fetch(this.serveraddress+"/caas_um_api/updateProjectUser/"+e+"/"+s+"/"+t,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async deleteProjectUser(e,s){await fetch(this.serveraddress+"/caas_um_api/deleteProjectUser/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async getUploadToken(e,s,t=null){let r=this.serveraddress+"/caas_um_api/uploadToken/"+e+"/"+s;t&&(r+="/"+t);let a=await fetch(r,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}});return await a.json()}processUploadFromToken(e,s=""){fetch(this.serveraddress+"/caas_um_api/processToken/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid,startpath:s},method:"PUT"})}async getModels(){let e=await fetch(this.serveraddress+"/caas_um_api/models",{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}});return await e.json()}async createEmptyModel(e,s,t){let r=await fetch(this.serveraddress+"/caas_um_api/createEmptyModel/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid,startpath:t},method:"PUT"});return await r.json()}async getDownloadToken(e,s){let t=await fetch(this.serveraddress+"/caas_um_api/downloadToken/"+e+"/"+s,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}});return await t.json()}async getPNG(e){return await fetch(this.serveraddress+"/caas_um_api/png/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}})}async getSCS(e){let s=await fetch(this.serveraddress+"/caas_um_api/scs/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid}}),t=await s.arrayBuffer();return new Uint8Array(t)}async enableStreamAccess(e){await fetch(this.serveraddress+"/caas_um_api/enableStreamAccess/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async deleteModel(e){await fetch(this.serveraddress+"/caas_um_api/deleteModel/"+e,{mode:"cors",headers:{"CSUM-API-SESSIONID":this.sessionid},method:"PUT"})}async initializeWebviewer(e){let s;if(this.useStreaming){let t=await fetch(this.serveraddress+"/caas_um_api/streamingSession",{mode:"cors",headers:{"CSUM-API-useSSR":this.useSSR,"CSUM-API-SESSIONID":this.sessionid}}),r=await t.json();r.ERROR?(this.useStreaming=!1,s=new Communicator.WebViewer({containerId:e,empty:!0,streamingMode:1})):(s=new Communicator.WebViewer({containerId:e,endpointUri:(-1!=this.serveraddress.indexOf("https")?"wss://":"ws://")+r.serverurl+":"+r.port+"?token="+r.sessionid,model:"_empty",rendererType:r.ssrEnabled?Communicator.RendererType.Server:Communicator.RendererType.Client}),this.streamingServerURL=r.serverurl)}else s=new Communicator.WebViewer({containerId:e,empty:!0,streamingMode:1});return s}}CaasU=s})();